# ##### dein plugin settings #####

# easy commentout key -> gc, gcc
[[plugins]]
repo = 'tomtom/tcomment_vim'

# easy insert () {} [] <> ...
[[plugins]]
repo = 'tpope/vim-surround'

# expantion copy and paste
[[plugins]]
repo = 'LeafCage/yankround.vim'
hook_add = '''
	nmap p <Plug>(yankround-p)
	xmap p <Plug>(yankround-p)
	nmap P <Plug>(yankround-P)
	nmap gp <Plug>(yankround-gp)
	xmap gp <Plug>(yankround-gp)
	nmap gP <Plug>(yankround-gP)
	nmap <C-p> <Plug>(yankround-prev)
	nmap <C-n> <Plug>(yankround-next)
'''

# neovim terminal plugin
[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
	let g:neoterm_autoinsert = 1
	let g:neoterm_autoscroll = 1

	function! NeotermOpenVSplit()
		let g:neoterm_split_on_tnew = 1
		Tnew
	endfunction

	function! NeotermOpenNewTab()
		let g:neoterm_split_on_tnew = 0
		tabnew
		Tnew
	endfunction

	nnoremap <silent> <Leader>T :call NeotermOpenNewTab()<CR>
	nnoremap <silent> <Leader>t :call NeotermOpenVSplit()<CR>
	nnoremap <silent> <Leader>c :call NeotermOpenVSplit()<CR>roscd && catkin_make<CR>
	nnoremap <silent> <Leader>p :call NeotermOpenVSplit()<CR>python %<CR>
'''

# cool statusline
[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
	let g:lightline = {
		\ 'enable': { 'tabline': 0 },
		\ 'colorscheme': 'wombat',
		\ 'active': {
			\ 'left': [ ['mode', 'paste'], ['readonly', 'filename', 'modified'] ],
			\ 'right': [ ['percent'], ['filetype'], ['fileencoding'] ]
		\ },
		\ 'inactive': {
			\ 'left': [ ['filename'] ],
			\ 'right': [ ['percent'], ['filetype'] ]
		\ },
		\ 'component_function':{
			\ 'filepath': 'FilePath'
		\ }
	\ }

	" # show statusbar
	set laststatus=2
	" # hide --INSERT--
	set noshowmode
'''

# file explorer
[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''

	" # japanese file search off
	let g:ctrlp_use_migemo = 0
	" # ambiguous search off
	let g:ctrlp_regexp = 1
	" # use cache
	let g:ctrlp_use_caching = 1
	" # do not delete cache
	let g:ctrlp_clear_cache_on_exit = 0
	" # clear cache mapping
	let g:ctrlp_prompt_mappings = { 'PrtClearCache()': ['<C-r>'] }
	" # lazy search on (wait xxx[ms] <1:default ->250[ms]>)
	let g:ctrlp_lazy_update = 200 
	" # set ctrlp window size
	let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:10,results:50'
	" " # do not show dotfiles
	let g:ctrlp_show_hidden = 0
	" # ignore specific files
	let g:ctrlp_custom_ignore = {
		\ 'dir':  '\v[\/]\.(git|hg|svn)$',
		\ 'file': '\v\.(exe|so|dll|o)$',
		\ 'link': 'some_bad_symbolic_links',
	\ }

	" # prevent from overwriting lightline
	let g:ctrlp_buffer_func = {
		\ 'enter': 'CtrlPEnter',
		\ 'exit': 'CtrlPLeave',
	\ }

	" # when CtrlP buffer opened, lightline and statusline off
	function! CtrlPEnter()
		set laststatus=0
	endfunction

		" # when CtrlP buffer closed, lightline and statusline on
	function! CtrlPLeave()
		set laststatus=2
	endfunction

	" # when you start nvim with no file, use CtrlP
	function! CtrlPIfEmpty()
		if @% == ""
			CtrlP ~/
		endif
	endfunction

	augroup AutoCtrlP
		autocmd!
		autocmd VimEnter * call CtrlPIfEmpty()
	augroup END

	function! CtrlPWithNowFName()
		let l:lazy_time = g:ctrlp_lazy_update
		let g:ctrlp_lazy_update = 0
		let g:ctrlp_default_input = fnamemodify(expand("%"), ":t:r") . "\\."
		CtrlP ~/
		let g:ctrlp_lazy_update = l:lazy_time
		let g:ctrlp_default_input = 0
	endfunction

	" let g:ctrlp_tabpage_position = 'ac'
	" let g:ctrlp_open_func = {
  "   \ 'files'     : 'MyCtrlPOpenFcn',
	" \ }

	" " # tabpage position
	" function! MyCtrlPOpenFcn(action, line) 
	" 	if a:action == 'v'
	" 		" # tabpage open before the current tab page
	" 		call call('ctrlp#acceptfile', ["t", a:line])
	" 		tabmove -
  "   else
	" 		call call('ctrlp#acceptfile', [a:action, a:line])
	" 	endif
	" endfunction

	" # CtrlP keymapping
	let g:ctrlp_map = '<nop>'
	nnoremap <silent> <Leader>e :CtrlP ~/<CR>
	nnoremap <silent> <Leader>E :CtrlPClearCache<CR>:CtrlP ~/<CR>
	nnoremap <silent> <Leader>n :CtrlP ~/.config/nvim<CR>
	nnoremap <silent> <Leader>w :call CtrlPWithNowFName()<CR>
'''

# colorscheme
[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
	colorscheme iceberg
'''

# repo = 'bcicen/vim-vice'
# repo = 'altercation/vim-colors-solarized'
# repo = 'baverman/vim-babymate256'
# repo = 'romainl/Apprentice'
# repo = 'mbbill/vim-seattle'
# repo = 'cocopon/iceberg.vim'

# smart_tabline
[[plugins]]
repo = 'myrobo/smart_tabline.vim'

# games
[[plugins]]
repo = 'rbtnn/game_engine.vim'
on_i = 1
[[plugins]]
repo = 'rbtnn/mario.vim'
depends = 'game_engine.vim'
on_source = 'game_engine.vim'
[[plugins]]
repo = 'rbtnn/puyo.vim'
rev = 'puyoteto'
depends = 'game_engine.vim'
on_source = 'game_engine.vim'
[[plugins]]
repo = 'rbtnn/reversi.vim'
depends = 'game_engine.vim'
on_source = 'game_engine.vim'
